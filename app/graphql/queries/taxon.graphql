fragment Taxon on Edition {
  api_path
  api_url
  base_path
  content_id
  description
  details {
    internal_name
    notes_for_editors
    visible_to_departmental_editors
  }
  document_type
  locale
  phase
  public_updated_at
  schema_name
  title
  web_url
  withdrawn
}

query taxon($base_path: String!) {
  edition(base_path: $base_path) {
    analytics_identifier
    base_path
    content_id
    description
    details {
      internal_name
      notes_for_editors
      visible_to_departmental_editors
    }
    document_type
    first_published_at
    links {
      available_translations {
        api_path
        api_url
        base_path
        content_id
        document_type
        locale
        public_updated_at
        schema_name
        title
        web_url
        withdrawn
      }
      associated_taxons: links_of_type(type: "associated_taxons") {
        ...Taxon
      }
      # TODO: implement taxons as a special type of field so they can be arbitrarily nested
      # (or just work out the deepest point in the tree and use that?)
      child_taxons: links_of_type(type: "parent_taxons", reverse: true) {
        ...Taxon
        links {
          child_taxons: links_of_type(type: "parent_taxons", reverse: true) {
            ...Taxon
            links {
              child_taxons: links_of_type(type: "parent_taxons", reverse: true) {
                ...Taxon
              }
            }
          }
        }
      }
      parent_taxons: links_of_type(type: "parent_taxons") {
        ...Taxon
        links {
          parent_taxons: links_of_type(type: "parent_taxons") {
            ...Taxon
            links {
              parent_taxons: links_of_type(type: "parent_taxons") {
                ...Taxon
              }
            }
          }
        }
      }
    }
    locale
    phase
    public_updated_at
    publishing_app
    publishing_request_id
    rendering_app
    schema_name
    title
    updated_at
  }
}
